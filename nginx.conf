events {
    worker_connections 1024;
}

http {
    upstream minio_s3 {
        least_conn;
        server minio:9000; # MinIO S3 upstream using Docker service name
    }

    upstream minio_console {
        least_conn;
        server minio:9001; # MinIO Console upstream using Docker service name
    }

    server {
        listen 80;
        listen [::]:80;
        server_name ${MINIO_SERVER_NAME};

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name ${MINIO_SERVER_NAME};

        ssl_certificate /etc/nginx/certs/interats-file.pea.co.th.crt;
        ssl_certificate_key /etc/nginx/certs/interats-file.pea.co.th.key;

        # Proxy requests to MinIO S3 for /storage
        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;
            proxy_pass http://minio_s3;
        }

        # Proxy requests to MinIO Console (UI) for /minio/ui
        location /minio/ui/ {
            rewrite ^/minio/ui/(.*) /$1 break;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # Websocket support for MinIO UI
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            chunked_transfer_encoding off;

            proxy_pass http://minio_console;
        }
    }
}